"""
B. Кольцевая линия метро
Ограничение времени    1 секунда
Ограничение памяти    64Mb
Ввод    стандартный ввод или input.txt
Вывод    стандартный вывод или output.txt

Витя работает недалеко от одной из станций кольцевой линии Московского метро, а
живет рядом с другой станцией той же линии. Требуется выяснить, мимо какого
наименьшего количества промежуточных станций необходимо проехать Вите по
кольцу, чтобы добраться с работы домой.

Формат ввода Станции пронумерованы подряд натуральными числами 1, 2, 3, …, N
(1-я станция – соседняя с N-й), N не превосходит 100.

Вводятся три числа: сначала N – общее количество станций кольцевой линии, а
затем i и j – номера станции, на которой Витя садится, и станции, на которой он
должен выйти. Числа i и j не совпадают. Все числа разделены пробелом.

Формат вывода
Требуется выдать минимальное количество промежуточных станций (не считая
станции посадки и высадки), которые необходимо проехать Вите.

Пример 1
Ввод    Вывод
100 5 6
        0
Пример 2
Ввод    Вывод
10 1 9
        1

Примечания
Пояснения к примерам:

1) На кольцевой линии 100 станций; проехать с 5-й на 6-ю станцию Витя может
напрямую, без промежуточных станций

2) На кольцевой линии 10 станций; проехать с 1-й на 9-ю станцию Витя может
через одну промежуточную, ее номер 10
"""


def read_input(fname):
    with open(fname, "r") as f:
        N, i, j = map(int, f.readline().strip().split(" "))
    return N, i, j


def solution(N, i, j):
    return min((i - j) % N, (j - i) % N) - 1


print(solution(*read_input("input.txt")))


def test():
    assert read_input("input1.txt") == (100, 5, 6)
    assert solution(*read_input("input1.txt")) == 0
    assert solution(*read_input("input2.txt")) == 1


test()
